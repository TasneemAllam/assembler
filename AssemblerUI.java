/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assembler;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author Tasneem
 */
public class AssemblerUI extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form AssemblerUI
     */
    private Assembler ASM;
    public AssemblerUI() {
        initComponents();
        addActionListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputField = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputField = new javax.swing.JTextArea();
        jToolBar1 = new javax.swing.JToolBar();
        loadbutton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        parsebutton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 0, 51));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("INPUT");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("OUTPUT");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 51));
        jLabel3.setText("SIC ASSEMBLER");

        inputField.setColumns(20);
        inputField.setFont(new java.awt.Font("Lucida Console", 1, 13)); // NOI18N
        inputField.setForeground(new java.awt.Color(153, 0, 51));
        inputField.setLineWrap(true);
        inputField.setRows(5);
        jScrollPane1.setViewportView(inputField);

        outputField.setEditable(false);
        outputField.setColumns(20);
        outputField.setFont(new java.awt.Font("Lucida Console", 1, 13)); // NOI18N
        outputField.setRows(5);
        jScrollPane2.setViewportView(outputField);

        jToolBar1.setRollover(true);

        loadbutton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        loadbutton.setText("LOAD");
        loadbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadbuttonActionPerformed(evt);
            }
        });
        jToolBar1.add(loadbutton);

        saveButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        saveButton.setText("SAVE");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(saveButton);

        parsebutton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        parsebutton.setForeground(new java.awt.Color(153, 0, 51));
        parsebutton.setText("PARSE");
        parsebutton.setActionCommand("parse");
        parsebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parsebuttonActionPerformed(evt);
            }
        });
        jToolBar1.add(parsebutton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2)))
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 557, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void parsebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parsebuttonActionPerformed
        // TODO add your handling code here:
        
        if(inputField.getText().equals("")){
            outputField.setText("No code.");
        }
        else{
        getOutputField().setText("");
        String code[] = getInputField().getText().split("\\n");
        for (int i=0; i<code.length ; i++){
            Splitter test = new Splitter (code[i]);
            if (!test.isChecksplitter() || test.isError()){
                System.out.println(test.isChecksplitter());
                System.out.println(test.isError());
                outputField.setText("INVALID INSTRUCTION FORMAT");
                return;
            }
        }
        Splitter test = new Splitter(code[0]);
        System.out.println(code.length);
        if(code.length<2){
            this.getOutputField().setText("No Code");
            return;
        }else if(!test.getOpcode().equalsIgnoreCase("START")){
            this.getOutputField().setText("INVALED START ADDRESS");
            return;
        }
        Splitter test1 = new Splitter(code[code.length-1]);
        if(!test1.getOpcode().equalsIgnoreCase("END")){
            this.getOutputField().setText("INVALED ENDDING ADDRESS");
            return;
        }
        else if(test.getOpcode().equalsIgnoreCase("START")&&test1.getOpcode().equalsIgnoreCase("END"))
        {
            if((!test.getLabel().equalsIgnoreCase(test1.getOperand())) && (!test.getOperand().equalsIgnoreCase(test1.getOperand())))
            {
                this.getOutputField().setText("INVALED PROGRAM NAME");
                return;
            }
        }
        
        ASM = new Assembler (this);
        
        if(ASM.isERRORORGNULL_FOUND()==true){
             this.getOutputField().setText("INVALED INSTRUCTION");
                return;
        }
        
        int size;
        size = code.length;
        getOutputField().append(ASM.getListFile() + "\n         ---------------------\n" + ASM.getObjectFile());
        }
    }//GEN-LAST:event_parsebuttonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        Parser write=new Parser();
        write.setFileName("LISFILE");
        write.write(ASM.getListFile());
        write.setFileName("OBJFILE");
        write.write(ASM.getObjectFile());
        
    }//GEN-LAST:event_saveButtonActionPerformed

    private void loadbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadbuttonActionPerformed
        
                Parser read=new Parser();
                read.setFileName("SRCFILE");
                getInputField().setText(read.read());
    }//GEN-LAST:event_loadbuttonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea inputField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton loadbutton;
    private javax.swing.JTextArea outputField;
    private javax.swing.JButton parsebutton;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
 @Override
    public void actionPerformed(ActionEvent e) {

    }

    void addActionListeners() {
        parsebutton.addActionListener(this);
        saveButton.addActionListener(this);
        loadbutton.addActionListener(this);
    }

    /**
     * @return the inputField
     */
    public javax.swing.JTextArea getInputField() {
        return inputField;
    }

    /**
     * @param inputField the inputField to set
     */
    public void setInputField(javax.swing.JTextArea inputField) {
        this.inputField = inputField;
    }

    /**
     * @return the outputField
     */
    public javax.swing.JTextArea getOutputField() {
        return outputField;
    }

    /**
     * @param outputField the outputField to set
     */
    public void setOutputField(javax.swing.JTextArea outputField) {
        this.outputField = outputField;
    }

}
